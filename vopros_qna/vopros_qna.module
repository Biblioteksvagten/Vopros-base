<?php

/**
 * Implementation of hook_nodeapi().
 */
function vopros_qna_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  // An answer node should not be viewable by itself. Instead, redirect 
  // to the answer on the question page.
  if (
    $op == 'view' && $node->type == 'vopros_answer' &&
    $a4 && // Node being viewed on a page by itself.
    isset($node->field_answer_question_ref[0]['nid']) &&
    $node->field_answer_question_ref[0]['nid'] > 0
  ) {
    $question_nid = (integer) $node->field_answer_question_ref[0]['nid'];
    drupal_goto('node/' . $question_nid, NULL, 'node-' .  $node->nid, 301);
  }
}

/**
 * Implementation of hook_link().
 */
function vopros_qna_link($type, $object, $teaser = FALSE) {
  $links = array();

  // Provide a link to answer the question for user with access.
  if ($type == 'node' && $object->type == 'vopros_question' &&
      user_access('create vopros_answer content')) {
    $links['vopros_answer_question'] = array(
      'title' => 'Besvar dette spørgsmål',
      'href' => 'node/add/vopros-answer',
      'query' => array('question' => $object->nid),
    );

    $links['vopros_edit_question'] = array(
      'title' => 'Redigér spørgsmålet',
      'href' => 'node/' . $object->nid . '/edit',
      'query' => drupal_get_destination,
    );
  }
  // Provide a link to edit the question when viewing the answer (since 
  // the normal links are not available, since the answer it not being 
  // viewed on a page by itself.
  elseif ($type == 'node' && $object->type == 'vopros_answer' &&
      node_access('update', $node)) {
    $links['vopros_edit_question'] = array(
      'title' => 'Redigér dette svar',
      'href' => 'node/' . $object->nid . '/edit',
    );
  }

  return $links;
}

/**
 * Implementation of hook_form_alter().
 */
function vopros_qna_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'vopros_answer_node_form') {
    if (isset($_REQUEST['question']) && $_REQUEST['question'] > 0) {
      // If question is specified in the query parameters, set the 
      // default value for the selection widget to that question, and 
      // hide it with #access. #disabled does seem to work for CCK 
      // widgets like these.
      // This cannot be done with hook_form_FORM_ID_alter, since the CCK 
      // fields have not been added yet when that hook is run.
      $form['field_answer_question_ref'][0]['#default_value']['nid'] = (integer) $_REQUEST['question'];
      $form['field_answer_question_ref']['#access'] = FALSE;

      // Also, show a short summary of the question that we are answering.
      $question_node = node_load($_REQUEST['question']);

      $form['question'] = array(
        '#type' => 'fieldset',
        '#title' => 'Spørgsmålet du besvarer',
        '#weight' => -99,
      );

      $form['question']['body'] = array(
        '#value' => check_markup($question_node->body, $question_node->format, FALSE),
      );

      $form['question']['edit'] = array(
        '#value' => l('Redigér spørgsmålet', 'node/' . $question_node->nid . '/edit', array(
          'query' => drupal_get_destination(),
        )),
      );
    }
    
    // Get rid of the teaser splitting functionality.
    unset($form['body_field']['teaser_js']);
    unset($form['body_field']['teaser_include']);
  }
}

/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function vopros_qna_form_vopros_question_node_form_alter(&$form, &$form_state) {
  // Only allow title editing for users that can change question status 
  // (ie. editors).
  $form['title']['#access'] = user_access('edit field_question_status');

  // Get rid of the teaser splitting functionality.
  unset($form['body_field']['teaser_js']);
  unset($form['body_field']['teaser_include']);
}

include_once('vopros_qna.features.inc');

