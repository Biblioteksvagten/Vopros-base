<?php

/**
 * Implements hook_schema().
 */
function vopros_question_schema() {
  $schema = array();

  $schema['vopros_question'] = array(
    'description' => 'The base table for questions.',
    'fields' => array(
      'question_id' => array(
        'description' => 'The primary identifier for an question.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'revision_id' => array(
        'description' => 'The current {vopros_question_revision}.revision_id version identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'questionTitle' => array(
        'description' => 'The question title, the label of the entity.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'questionContent' => array(
        'description' => 'The actual question that has been asked.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'questionStatus' => array(
        'description' => 'The status name of this question.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'subjectCategory' => array(
        'description' => 'The subject of the question.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'questionDeadline' => array(
        'description' => 'The time limit for when the question should be answered by if any.',
        'type' => 'int',
        'unsigned' => TRUE,
      ),
      'questionUsage' => array(
        'description' => 'How the question should be used.',
        'type' => 'varchar',
        'length' => '255',
      ),
      'questionNote' => array(
        'description' => 'A note about the question, like search queries etc.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      // Info about the origin of the question
      'qandaService' => array(
        'description' => 'The service that brought us the question.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'agencyId' => array(
        'description' => 'The agency/portal that sent the question.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'referencedBy' => array(
        'description' => 'Referenced from.',
        'type' => 'varchar',
        'length' => '255',
        'default' => '',
      ),
      'userName' => array(
        'description' => 'The name of the person that asked the question.',
        'type' => 'varchar',
        'length' => '255',
        'default' => '',
      ),
      'userEmail' => array(
        'description' => 'The email address for the person that asked the question.',
        'type' => 'varchar',
        'length' => '255',
        'default' => '',
      ),
      'userPostalCode' => array(
        'description' => 'The postal code of the person who sent in the question.',
        'type' => 'varchar',
        'length' => '255',
        'default' => '',
      ),
      'userMobilePhone' => array(
        'description' => 'The mobile phone number for the person that asked the question.',
        'type' => 'varchar',
        'length' => '255',
        'default' => '',
      ),
      'userAge' => array(
        'description' => 'The age of the person that asked the question.',
        'type' => 'int',
        'unsigned' => TRUE,
      ),
      'userGender' => array(
        'description' => 'The gender of the person asking the question.',
        'type' => 'varchar',
        'length' => '255',
        'default' => '',
      ),
      'userFieldOfStudy' => array(
        'description' => 'The field of study of the person asking the question.',
        'type' => 'varchar',
        'length' => '255',
        'default' => '',
      ),
      'userLibrary' => array(
        'description' => 'The library of the person asking the question.',
        'type' => 'varchar',
        'length' => '255',
        'default' => '',
      ),
      'userAnswerPreference' => array(
        'description' => 'The gender of the person asking the question.',
        'type' => 'varchar',
        'length' => '255',
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the question was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the question was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('question_id'),
    'unique keys' => array(
      'revision_id' => array('revision_id'),
    ),
    'foreign keys' => array(
      'current_revision' => array(
        'table' => 'vopros_question_revision',
        'columns'=> array('revision_id' => 'revision_id'),
      ),
    ),
  );

  $schema['vopros_question_revision'] = array(
    'description' => 'Saves information about each saved revision of a {vopros_question}.',
    'fields' => array(
      'revision_id' => array(
        'description' => 'The primary identifier for this revision.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'revision_uid' => array(
        'description' => 'The {users}.uid that created this revision.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'question_id' => array(
        'description' => 'The {vopros_question}.question_id of the question this revision belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'question_title' => array(
        'description' => 'The question title, the label of the entity.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'question_text' => array(
        'description' => 'The actual question that has been asked.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'status' => array(
        'description' => 'The status name of this revision.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'log' => array(
        'description' => 'The log entry explaining the changes in this version.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'revision_timestamp' => array(
        'description' => 'The Unix timestamp when this revision was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('revision_id'),
    'foreign keys' => array(
      'question' => array(
        'table' => 'vopros_question',
        'columns'=> array('question_id' => 'question_id'),
      ),
    ),
  );

  return $schema;
}
