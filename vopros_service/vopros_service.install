<?php

/**
 * Implements hook_schema().
 */
function vopros_service_schema() {
  $schema = array();

  $schema['vopros_service'] = array(
    'description' => 'The base table for vopros services.',
    'fields' => array(
      'service_id' => array(
        'description' => 'The primary identifier for a vopros service.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'machine_name' => array(
        'description' => 'The internal machine name of a vopros service.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human readable name for a vopros service.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'url' => array(
        'description' => 'The url of the service, used for posting messages to it.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'auth_key' => array(
        'description' => 'The secret key or auth token used for authentications.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'auth_type' => array(
        'description' => 'The type of authentication used for the vopros server, fx "secret_key", "oauth" etc.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'revision_id' => array(
        'description' => 'The current {vopros_service_revision}.revision_id version identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'allow_ingoing' => array(
        'description' => 'Boolean indicator, indicating if ingoing requests should be allowed.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'allow_outgoing_help' => array(
        'description' => 'Boolean indicator, indicating if outgoing requests that ask for help should be allowed.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'allow_outgoing_turn_over' => array(
        'description' => 'Boolean indicator, indicating if outgoing requests that turn over the question should be allowed.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the vopros_service was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the vopros_service was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('service_id'),
    'unique keys' => array(
      'revision_id' => array('revision_id'),
      'machine_name' => array('machine_name'),
    ),
    'foreign keys' => array(
      'current_revision' => array(
        'table' => 'vopros_service_revision',
        'columns'=> array('revision_id' => 'revision_id'),
      ),
    ),
  );

  $schema['vopros_service_revision'] = array(
    'description' => 'Saves information about each saved revision of a {vopros_email}.',
    'fields' => array(
      'revision_id' => array(
        'description' => 'The primary identifier for this revision.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'revision_uid' => array(
        'description' => 'The {users}.uid that created this revision.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'service_id' => array(
        'description' => 'The {vopros_service}.service_id of the email this revision belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'machine_name' => array(
        'description' => 'The internal machine name of a vopros service.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human readable name for a vopros service.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'url' => array(
        'description' => 'The url of the service, used for posting messages to it.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'auth_key' => array(
        'description' => 'The secret key or auth token used for authentications.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'auth_type' => array(
        'description' => 'The type of authentication used for the vopros server, fx "secret_key", "oauth" etc.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'allow_ingoing' => array(
        'description' => 'Boolean indicator, indicating if ingoing requests should be allowed.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'allow_outgoing_help' => array(
        'description' => 'Boolean indicator, indicating if outgoing requests that ask for help should be allowed.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'allow_outgoing_turn_over' => array(
        'description' => 'Boolean indicator, indicating if outgoing requests that turn over the question should be allowed.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'log' => array(
        'description' => 'The log entry explaining the changes in this version.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'revision_timestamp' => array(
        'description' => 'The Unix timestamp when this revision was created/changed.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('revision_id'),
    'foreign keys' => array(
      'service' => array(
        'table' => 'vopros_service',
        'columns'=> array('service_id' => 'service_id'),
      ),
    ),
  );

  return $schema;
}
